"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.function_sql = void 0;
exports.function_sql = {
    sql: "\n    --------------------------------------------------------------------------------------------\u0424\u0443\u043D\u043A\u0446\u0438\u044F \u043F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u044F \u0433\u0440\u0443\u043F\u043F \u0443\u0441\u0442\u0440\u043E\u0439\u0441\u0442\u0432 \u043F\u043E \u043E\u043F\u0440\u0435\u0434\u0435\u043B\u0435\u043D\u043D\u043E\u0439 \n    --------------------------------------------------------------------------------------------\u043E\u0440\u0433\u0430\u043D\u0438\u0437\u0430\u0446\u0438\u0438 \u0438\u043B\u0438 \u0434\u043B\u044F \u0430\u0434\u043C\u0438\u043D\u0430 \u0432\u0441\u0435\u0445\n    DROP FUNCTION IF EXISTS SelectDevs_Group_OrgId;\n    CREATE OR REPLACE FUNCTION SelectDevs_Group_OrgId(\n    \tc_org_id VARCHAR(60)\n\t)\n    RETURNS TABLE\n    (\n\t    id BIGINT,\n\t    parent_id BIGINT, \n\t    g_name VARCHAR(250), \n\t    latitude VARCHAR(60), \n\t    longitude VARCHAR(60),\n\t    org_id BIGINT, \n\t    ord_num INTEGER, \n\t    deleted BOOLEAN, \n\t    g_info TEXT\n    )\n    AS $$\n    \tSELECT * FROM devs_groups WHERE CAST(org_id AS TEXT) LIKE c_org_id\n    $$\n    LANGUAGE SQL;\n\n    --------------------------------------------------------------------------------------------\u0424\u0443\u043D\u043A\u0446\u0438\u044F \u0434\u043E\u0431\u0430\u0432\u043B\u0435\u043D\u044F \u0433\u0440\u0443\u043F\u043F\u044B \u0443\u0441\u0442\u0440\u043E\u0439\u0441\u0442\u0432\u0430\n    DROP FUNCTION IF EXISTS AddDevs_Group;\n    CREATE OR REPLACE FUNCTION AddDevs_Group(\n\t    c_parent_id BIGINT,\n\t    c_g_name VARCHAR(250), \n\t    c_latitude VARCHAR(60), \n\t    c_longitude VARCHAR(60), \n\t    c_org_id BIGINT, \n\t    c_ord_num INTEGER, \n\t    c_deleted BOOLEAN, \n\t    c_g_info TEXT\n    ) RETURNS BIGINT\n    AS $$\n\t    INSERT INTO devs_groups(parent_id, g_name, latitude, longitude, org_id, ord_num, deleted, g_info)\n\t    VALUES(c_parent_id, c_g_name, c_latitude, c_longitude, c_org_id, c_ord_num, c_deleted, c_g_info)\n\t    RETURNING id\n    $$\n    LANGUAGE SQL;\n\n    --------------------------------------------------------------------------------------------\u0424\u0443\u043D\u043A\u0446\u0438\u044F \u043E\u0431\u043D\u043E\u0432\u043B\u0435\u043D\u0438\u044F \u0433\u0440\u0443\u043F\u043F\u044B \u0443\u0441\u0442\u0440\u043E\u0439\u0441\u0442\u0432\u0430\n    DROP FUNCTION IF EXISTS UpdateDevs_Group;\n    CREATE OR REPLACE FUNCTION UpdateDevs_Group(\n    \tc_id BIGINT,\n\t    c_parent_id BIGINT,\n        c_g_name VARCHAR(250),\n        c_latitude VARCHAR(60),\n        c_longitude VARCHAR(60),\n        c_org_id BIGINT,\n\t    c_ord_num INTEGER,\n        c_deleted BOOLEAN,\n        c_g_info TEXT\n    )\n    RETURNS VOID\n    as $$\n    UPDATE Devs_Groups\n    SET\n    \tparent_id = c_parent_id,\n    \tg_name = c_g_name,\n    \tlatitude = c_latitude,\n    \tlongitude = c_longitude,\n    \torg_id = c_org_id,\n    \tord_num = c_ord_num,\n    \tdeleted = c_deleted,\n        g_info = c_g_info\n    WHERE id = c_id\n    $$ LANGUAGE sql;\n\n\n    --------------------------------------------------------------------------------------------\u0424\u0443\u043D\u043A\u0446\u0438\u044F \u043F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u044F \u0434\u0430\u043D\u043D\u044B\u0445 \u0443\u0441\u0442\u0440\u043E\u0439\u0441\u0442\u0432 \u043F\u043E \u0433\u0440\u0443\u043F\u043F\u0435 \n    DROP FUNCTION IF EXISTS SelectDevs;\n    CREATE OR REPLACE FUNCTION SelectDevs(\n\t    c_group_dev_id BIGINT\n    )\n    RETURNS TABLE (\n    \tid BIGINT,\n    \tgroup_dev_id BIGINT,\n    \tnumber VARCHAR(80), \n    \tname VARCHAR(250), \n    \tlatitude VARCHAR(60),\n    \tlongitude VARCHAR(60),\n    \tsensors JSON,\n    \tdeleted BOOLEAN,\n    \tinfo TEXT,\n        period_sess BIGINT\n    )\n    AS $$\n    SELECT * FROM devs WHERE group_dev_id = c_group_dev_id\n    $$ LANGUAGE SQL;\n\n\n    --------------------------------------------------------------------------------------------\u0424\u0443\u043D\u043A\u0446\u0438\u044F \u0434\u043E\u0431\u0430\u0432\u043B\u0435\u043D\u0438\u044F \u0443\u0441\u0442\u0440\u043E\u0439\u0441\u0442\u0432\u0430\n    DROP FUNCTION IF EXISTS AddDevs;\n    CREATE OR REPLACE FUNCTION AddDevs(\n\t    c_group_dev_id BIGINT,\n\t    c_number VARCHAR(80), \n\t    c_name VARCHAR(250), \n\t    c_latitude VARCHAR(60),\n\t    c_longitude VARCHAR(60),\n\t    c_sensors JSON,\n\t    c_deleted BOOLEAN,\n\t    c_info TEXT,\n        c_period_sess BIGINT\n    )\n    RETURNS BIGINT\n    AS $$\n\t    INSERT INTO devs (group_dev_id, number, name, latitude, longitude, sensors, deleted, info, period_sess)\n\t    VALUES (c_group_dev_id, c_number, c_name, c_latitude, c_longitude, c_sensors, c_deleted, c_info, c_period_sess)\n\t    RETURNING id\n    $$ LANGUAGE SQL;\n\n\n    --------------------------------------------------------------------------------------------\u0424\u0443\u043D\u043A\u0446\u0438\u044F \u043E\u0431\u043D\u043E\u0432\u043B\u0435\u043D\u0438\u044F \u0443\u0441\u0442\u0440\u043E\u0439\u0441\u0442\u0432\u0430\n    DROP FUNCTION IF EXISTS UpdateDevs;\n    CREATE OR REPLACE FUNCTION UpdateDevs(\n\t    c_id BIGINT,\n\t    c_group_dev_id BIGINT,\n\t    c_number VARCHAR(80),\n\t    c_name VARCHAR(250),\n\t    c_latitude VARCHAR(60),\n\t    c_longitude VARCHAR(60),\n\t    c_sensors JSON,\n\t    c_deleted BOOLEAN,\n\t    c_info TEXT,\n        c_period_sess BIGINT\n    )\n    RETURNS VOID \n    AS $$\n    \tUPDATE devs SET\n    \tgroup_dev_id=c_group_dev_id,\n    \tnumber=c_number,\n    \tname=c_name,\n    \tlatitude=c_latitude,\n    \tlongitude=c_longitude,\n    \tsensors=c_sensors,\n    \tdeleted=c_deleted,\n    \tinfo = c_info,\n        period_sess= c_period_sess\n    \tWHERE id = c_id\n    $$\n    LANGUAGE SQL; \n\n\n    --------------------------------------------------------------------------------------------\u0424\u0443\u043D\u043A\u0446\u0438\u044F \u043F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u044F \u0441\u0435\u0441\u0441\u0438\u0439 \u0443\u0441\u0442\u0440\u043E\u0439\u0441\u0442\u0432\u0430 \n    DROP FUNCTION IF EXISTS SelectDev_Sess;\n    CREATE OR REPLACE FUNCTION SelectDev_Sess(\n    \tc_dev_number VARCHAR(80),\n    \tstart_period VARCHAR(80),\n    \tend_period VARCHAR(80)\n    )\n    RETURNS TABLE\n    (\n    \tid BIGINT,\n    \ttime_dev TIMESTAMP,\n    \ttime_srv TIMESTAMP,\n    \tdev_number VARCHAR(80),\n    \tdev_id BIGINT,\n    \tlevel_akb FLOAT,\n    \tsess_data TEXT\n    )\n    AS $$ \n    SELECT * FROM dev_sess WHERE dev_number = c_dev_number AND time_dev>= CAST(start_period as TIMESTAMP) AND time_dev<=CAST(end_period as TIMESTAMP)\n    $$ LANGUAGE SQL;\n\n\n    --------------------------------------------------------------------------------------------\u0424\u0443\u043D\u043A\u0446\u0438\u044F \u0434\u043E\u0431\u0430\u0432\u043B\u0435\u043D\u0438\u044F \u043F\u043E\u0432\u0435\u0440\u043E\u0447\u043D\u043E\u0433\u043E \u0438\u043D\u0442\u0435\u0440\u0432\u0430\u043B\u0430 \u0443\u0441\u0442\u0440\u043E\u0439\u0441\u0442\u0432\u0430\n    DROP FUNCTION IF EXISTS AddDev_Povs;\n    CREATE OR REPLACE FUNCTION AddDev_Povs(\n\t    c_dev_id BIGINT,\n\t    c_dev_number VARCHAR(80), \n\t    c_start_povs TIMESTAMP, \n\t    c_end_povs TIMESTAMP, \n\t    c_old_dev_povs BIGINT\n    ) RETURNS BIGINT\n    AS $$\n\t    INSERT INTO dev_povs(dev_id, dev_number, start_povs, end_povs, old_dev_povs)\n\t    VALUES(c_dev_id, c_dev_number, c_start_povs, c_end_povs, c_old_dev_povs)\n\t    RETURNING id\n    $$\n    LANGUAGE SQL;\n\n    --------------------------------------------------------------------------------------------\u0424\u0443\u043D\u043A\u0446\u0438\u044F \u043F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u044F \u043F\u043E\u0432\u0435\u0440\u043E\u0447\u043D\u043E\u0433\u043E \u0438\u043D\u0442\u0435\u0440\u0432\u0430\u043B\u0430 \u0443\u0441\u0442\u0440\u043E\u0439\u0441\u0442\u0432\u0430\n    DROP FUNCTION IF EXISTS SelectDev_Povs;\n    CREATE OR REPLACE FUNCTION SelectDev_Povs(\n    \tc_dev_id BIGINT,\n    \tc_dev_number VARCHAR(80) \n    ) RETURNS TABLE\n    (\n    \tid BIGINT,\n    \tdev_id BIGINT, \n    \tdev_number VARCHAR(80), \n    \tstart_povs TIMESTAMP, \n    \tend_povs TIMESTAMP, \n    \told_dev_povs BIGINT\n    )\n    AS $$\n    \tselect * from dev_povs WHERE dev_id = c_dev_id AND dev_number = c_dev_number order by id desc limit 1;\n    $$\n    LANGUAGE SQL;\n\n    --------------------------------------------------------------------------------------------\u0424\u0443\u043D\u043A\u0446\u0438\u044F \u0434\u043E\u0431\u0430\u0432\u043B\u0435\u043D\u0438\u044F \u043A\u043E\u043D\u0442\u0440\u043E\u043B\u044C\u043D\u043E\u0439 \u0441\u0435\u0441\u0441\u0438\u0438 \n    DROP FUNCTION IF EXISTS AddControl_Dev_Sess;\n    CREATE OR REPLACE FUNCTION AddControl_Dev_Sess(\n    \tc_dev_sess_id BIGINT,\n    \tc_dev_id BIGINT,\n    \tc_dev_number VARCHAR(80) \n    ) RETURNS BIGINT\n    AS $$\n    \tINSERT INTO control_dev_sess(dev_sess_id, dev_id, dev_number)\n    \tVALUES(c_dev_sess_id, c_dev_id, c_dev_number)\n    \tRETURNING id\n    $$\n    LANGUAGE SQL;\n\n    --------------------------------------------------------------------------------------------\u0424\u0443\u043D\u043A\u0446\u0438\u044F \u043F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u044F \u0432\u0441\u0435\u0445 \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u0435\u0439\n    DROP FUNCTION IF EXISTS SelectAllUsers;\n    CREATE OR REPLACE FUNCTION SelectAllUsers()\n    RETURNS table \n    (\n    \tu_id BIGINT, \n        u_login VARCHAR(250), \n        u_password VARCHAR(250), \n        u_family VARCHAR(150), \n        u_name VARCHAR(150), \n        u_father VARCHAR(150), \n        u_telephone VARCHAR(50), \n        u_email VARCHAR(150), \n        u_org_id BIGINT, \n        u_job_title_id BIGINT, \n        u_roles_ids JSON,\n        u_user_data JSON, \n        u_mail_code VARCHAR(250), \n        u_act_mail BOOLEAN, \n        u_re_password_code VARCHAR(250), \n        u_deleted BOOLEAN, \n        u_deleted_date TIMESTAMP, \n        u_created_at TIMESTAMP, \n        u_info TEXT,\n    \tjt_name VARCHAR (250), \n    \torgs_full_name VARCHAR(400)\n    )\n    AS $$\n    SELECT users.id, users.login, users.password, users.family, users.name, users.father, users.telephone, users.email,\n    users.org_id, users.job_title_id, users.roles_ids, users.user_data, users.mail_code, users.act_mail, users.re_password_code, users.deleted, \n    users.deleted_date, users.created_at, users.info, jobs_titles.name, orgs.full_name FROM users \n    JOIN jobs_titles on jobs_titles.id = users.job_title_id\n    JOIN orgs on orgs.id = users.org_id\n    $$\n    LANGUAGE SQL;\n\n    --------------------------------------------------------------------------------------------\u0424\u0443\u043D\u043A\u0446\u0438\u044F \u0434\u043E\u0431\u0430\u0432\u043B\u0435\u043D\u0438\u044F \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F\n    DROP FUNCTION IF EXISTS AddUser;\n    CREATE OR REPLACE FUNCTION AddUser\n    (\n        c_login VARCHAR(250), \n        c_password VARCHAR(250), \n        c_family VARCHAR(150), \n        c_name VARCHAR(150), \n        c_father VARCHAR(150), \n        c_telephone VARCHAR(50), \n        c_email VARCHAR(150), \n        c_org_id BIGINT, \n        c_job_title_id BIGINT, \n        c_roles_ids JSON,\n        c_user_data JSON, \n        c_mail_code VARCHAR(250), \n        c_act_mail BOOLEAN, \n        c_re_password_code VARCHAR(250), \n        c_deleted BOOLEAN, \n        c_deleted_date TIMESTAMP, \n        c_created_at TIMESTAMP, \n        c_info TEXT\n    ) RETURNS BIGINT \n    AS $$\n        INSERT INTO users(login, password, family, name, father, telephone, email, org_id, job_title_id, roles_ids, user_data, mail_code, act_mail, re_password_code, deleted, deleted_date, created_at, info)\n        VALUES(c_login, c_password, c_family, c_name, c_father, c_telephone, c_email, c_org_id, c_job_title_id, c_roles_ids, c_user_data, c_mail_code, c_act_mail, c_re_password_code, c_deleted, c_deleted_date, c_created_at, c_info)\n        RETURNING id\n    $$\n    LANGUAGE SQL;\n\n    --------------------------------------------------------------------------------------------\u0424\u0443\u043D\u043A\u0446\u0438\u044F \u043E\u0431\u043D\u043E\u0432\u043B\u0435\u043D\u0438\u044F \u0434\u0430\u043D\u043D\u044B\u0445 \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F \n    DROP FUNCTION IF EXISTS UpdateUser;\n    CREATE OR REPLACE FUNCTION UpdateUser(\n        c_login VARCHAR(250),\n        c_family VARCHAR(150),\n        c_name VARCHAR(150),\n        c_father VARCHAR(150),\n        c_telephone VARCHAR(50),\n        c_email VARCHAR(150), \n        c_info TEXT\n    )\n    RETURNS VOID\n    as $$\n    UPDATE users\n    SET\n        family = c_family,\n        name = c_name,\n        father = c_father,\n        telephone = c_telephone,\n        mail_code = CASE WHEN ((SELECT email FROM users WHERE login=c_login) <> c_email) THEN ('') ELSE (SELECT mail_code FROM users WHERE login=c_login) END,\n        act_mail = CASE WHEN ((SELECT email FROM users WHERE login=c_login) <> c_email) THEN (false) ELSE (SELECT act_mail FROM users WHERE login=c_login) END,\n        email=c_email,\n        info = c_info\n    WHERE login=c_login\n    $$ LANGUAGE sql;\n\n    --------------------------------------------------------------------------------------------\u0424\u0443\u043D\u043A\u0446\u0438\u044F \u043E\u0431\u043D\u043E\u0432\u043B\u0435\u043D\u0438\u044F \u0434\u0430\u043D\u043D\u044B\u0445 \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F \u0430\u0434\u043C\u0438\u043D\u0438\u0441\u0442\u0440\u0430\u0442\u043E\u0440\u043E\u043C\n    DROP FUNCTION IF EXISTS UpdateUserAdmin;\n    CREATE OR REPLACE FUNCTION UpdateUserAdmin(\n\t    c_login VARCHAR(250),\n\t    c_password VARCHAR(250),\n\t    c_family VARCHAR(150),\n        c_name VARCHAR(150),\n        c_father VARCHAR(150),\n\t    c_telephone VARCHAR(50),\n        c_email VARCHAR(150),\n        c_id_org BIGINT,\n        c_id_job BIGINT,\n        c_roles_ids JSON,\n\t    c_mail_code VARCHAR(250),\n\t    c_re_password_code VARCHAR(250),\n\t    c_deleted BOOLEAN,\n        c_info TEXT\n\t    )\n    RETURNS VOID\n    AS $$\n    \tUPDATE users SET\n    \tpassword = c_password,\n    \tfamily = c_family,\n        name = c_name,\n        father = c_father,\n    \ttelephone = c_telephone,\n        email = c_email,\n        org_id = c_id_org,\n        job_title_id = c_id_job,\n        roles_ids = c_roles_ids,\n    \tmail_code = c_mail_code,\n    \tact_mail = CASE WHEN ((SELECT email FROM users WHERE login=c_login) <> c_email) THEN (false) ELSE (SELECT act_mail FROM users WHERE login=c_login) END,\n    \tre_password_code = c_re_password_code,\n    \tdeleted = c_deleted,\n    \tdeleted_date = CASE WHEN (c_deleted<>false) then (CURRENT_TIMESTAMP) ELSE (null) END,\n        info = c_info\n    \tWHERE login = c_login\n    $$\n    LANGUAGE SQL;\n\n    --------------------------------------------------------------------------------------------\u0424\u0443\u043D\u043A\u0446\u0438\u044F \u043E\u0431\u043D\u043E\u0432\u043B\u0435\u043D\u0438\u044F \u0438 \u043F\u043E\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043D\u0438\u044F email \n    DROP FUNCTION IF EXISTS UpdateUserEmail;\n    CREATE OR REPLACE FUNCTION UpdateUserEmail\n    (c_mail_code VARCHAR(250),\n    c_sess_code VARCHAR(250))\n    RETURNS VOID AS $$\n        UPDATE users \n        SET mail_code = c_mail_code,\n        act_mail = true\n        WHERE login = (select login from users inner join sessions on sessions.uid = users.id where sess_code = c_sess_code)\n    $$ LANGUAGE sql;\n\n    --------------------------------------------------------------------------------------------\u0424\u0443\u043D\u043A\u0446\u0438\u044F \u043E\u0431\u043D\u043E\u0432\u043B\u0435\u043D\u0438\u044F \u043F\u0430\u0440\u043E\u043B\u044F \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u0435\u043C\n    DROP FUNCTION IF EXISTS ChangePass;\n    CREATE OR REPLACE FUNCTION ChangePass(\n        c_login VARCHAR(250),\n        c_new_password VARCHAR(250)\n    )\n    RETURNS VOID\n    as $$\n    UPDATE users\n    SET\n        password = c_new_password\n    \tWHERE login=c_login;\n    $$ LANGUAGE sql;\n\n    --------------------------------------------------------------------------------------------\u0424\u0443\u043D\u043A\u0446\u0438\u044F \u0441\u043E\u0437\u0434\u0430\u043D\u0438\u044F/\u043E\u0431\u043D\u043E\u0432\u043B\u0435\u043D\u0438\u044F \u043A\u043E\u0434\u0430 \u0434\u043B\u044F \u0432\u043E\u0441\u0441\u0442\u0430\u043D\u043E\u0432\u043B\u0435\u043D\u0438\u044F \u043F\u0430\u0440\u043E\u043B\u044F \n    DROP FUNCTION IF EXISTS UpdateRePassCode;\n    CREATE OR REPLACE FUNCTION UpdateRePassCode(\n        c_login VARCHAR(250),\n        c_re_password_code VARCHAR(250))\n    RETURNS VOID AS $$\n        UPDATE users\n        SET re_password_code = c_re_password_code\n        WHERE login = c_login\n    $$ LANGUAGE sql;\n\n\n    --------------------------------------------------------------------------------------------\u0424\u0443\u043D\u043A\u0446\u0438\u044F \u0437\u0430\u0431\u044B\u043B\u0438 \u043F\u0430\u0440\u043E\u043B\u044C \n    DROP FUNCTION IF EXISTS ForgPass;\n    create or replace function ForgPass(\n    \tc_login VARCHAR(250),\n    \tc_password VARCHAR(250),\n    \tc_re_password_code VARCHAR(250))\n    RETURNS VOID AS $$\n    \tUPDATE users\n    \tSET re_password_code = c_re_password_code,\n    \tpassword = c_password\n    \tWHERE login = c_login\n    $$ LANGUAGE sql; \n\n    --------------------------------------------------------------------------------------------\u0424\u0443\u043D\u043A\u0446\u0438\u044F \u0434\u043E\u0431\u0430\u0432\u043B\u0435\u043D\u0438\u044F \u0441\u0435\u0441\u0441\u0438\u0438 \u043F\u0440\u0438 \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438\n    DROP FUNCTION IF EXISTS AddUserSession;\n    CREATE OR REPLACE FUNCTION AddUserSession \n    (\n    c_Uid BIGINT,\n    c_Expires TIMESTAMP,\n    c_Created_at TIMESTAMP,\n    c_Sess_code VARCHAR(250),\n    c_Sess_data JSON\n    ) RETURNS VOID AS $$\n    BEGIN \n        INSERT INTO sessions(uid, expires, created_at, sess_code, sess_data)\n        VALUES(c_Uid, c_Expires, c_Created_at,c_Sess_code, c_Sess_data);\n    END\n    $$\n    LANGUAGE 'plpgsql';\n\n    --------------------------------------------------------------------------------------------\u0424\u0443\u043D\u043A\u0446\u0438\u044F \u0443\u0434\u0430\u043B\u0435\u043D\u0438\u044F \u0441\u0435\u0441\u0441\u0438\u0438 \u043F\u0440\u0438 \u0432\u044B\u0445\u043E\u0434\u0435 \u0438\u0437 \u043F\u0440\u043E\u0433\u0440\u0430\u043C\u043C\u044B\n    DROP FUNCTION IF EXISTS DeleteSessions;\n    CREATE OR REPLACE FUNCTION DeleteSessions (\n        c_sess_code VARCHAR(250)\n    ) RETURNS VOID AS $$\n        DELETE FROM sessions WHERE sess_code=c_sess_code\n    $$ \n    LANGUAGE sql;\n\n    --------------------------------------------------------------------------------------------\u0424\u0443\u043D\u043A\u0446\u0438\u044F \u043F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u044F \u0434\u0430\u043D\u043D\u044B\u0445 \u043F\u0440\u0438 \u0430\u0432\u0442\u043E\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \u043F\u043E \u043B\u043E\u0433\u0438\u043D\u0443 \u0438 \u043F\u0430\u0440\u043E\u043B\u044E\n    DROP FUNCTION IF EXISTS SelectUser;\n    CREATE OR REPLACE FUNCTION SelectUser(\n        c_login VARCHAR(250), \n        c_password VARCHAR(250)\n    )\n    RETURNS table(\n        id BIGINT, \n        login VARCHAR(250), \n        password VARCHAR(250), \n        family VARCHAR(150), \n        name VARCHAR(150), \n        father VARCHAR(150), \n        telephone VARCHAR(50), \n        email VARCHAR(150), \n        org_id BIGINT, \n        job_title_id BIGINT, \n        roles_ids JSON,\n        user_data JSON, \n        mail_code VARCHAR(250), \n        act_mail BOOLEAN, \n        re_password_code VARCHAR(250), \n        deleted BOOLEAN, \n        deleted_date TIMESTAMP, \n        created_at TIMESTAMP, \n        info TEXT\n    )\n    as $$\n        SELECT users\n        FROM users \n        WHERE login = c_login and password = c_password\n    $$ LANGUAGE sql;\n\n    --------------------------------------------------------------------------------------------\u0424\u0443\u043D\u043A\u0446\u0438\u044F \u043F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u044F \u0434\u0430\u043D\u043D\u044B\u0445 \u043F\u043E email\n    DROP FUNCTION IF EXISTS SelectUserLoginEmail;\n    CREATE OR REPLACE FUNCTION SelectUserLoginEmail(\n        c_data VARCHAR(250)\n    )\n    RETURNS table(\n        password VARCHAR(250),\n        act_mail BOOLEAN, \n        re_password_code VARCHAR(250) \n    )\n    as $$\n        SELECT password, act_mail, re_password_code\n        FROM users \n        WHERE login = c_data OR email = c_data\n    $$ LANGUAGE sql;\n    --------------------------------------------------------------------------------------------\u0424\u0443\u043D\u043A\u0446\u0438\u044F \u043F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u044F \u0434\u0430\u043D\u043D\u044B\u0445 \u043F\u043E \u043A\u043E\u0434\u0443 \u0441\u0435\u0441\u0441\u0438\u0438\n    DROP FUNCTION IF EXISTS SelectUserBySessCode;\n    CREATE OR REPLACE FUNCTION SelectUserBySessCode(\n        c_sess_code VARCHAR(250)\n    )\n    RETURNS table(\n        id BIGINT, \n        login VARCHAR(250), \n        password VARCHAR(250), \n        family VARCHAR(150), \n        name VARCHAR(150), \n        father VARCHAR(150), \n        telephone VARCHAR(50), \n        email VARCHAR(150), \n        org_id BIGINT, \n        job_title_id BIGINT, \n        roles_ids JSON,\n        user_data JSON, \n        mail_code VARCHAR(250), \n        act_mail BOOLEAN, \n        re_password_code VARCHAR(250), \n        deleted BOOLEAN, \n        deleted_date TIMESTAMP, \n        created_at TIMESTAMP, \n        info TEXT\n    )\n    as $$\n        SELECT users\n        FROM users \n        INNER JOIN sessions on users.id = sessions.uid\n        WHERE sessions.sess_code = c_sess_code\n    $$ LANGUAGE sql;\n\n    --------------------------------------------------------------------------------------------\u0424\u0443\u043D\u043A\u0446\u0438\u044F \u043F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u044F \u0434\u0430\u043D\u043D\u044B\u0445 \u0441\u0435\u0441\u0441\u0438\u0438 \u043F\u043E \u043A\u043E\u0434\u0443\n    DROP FUNCTION IF EXISTS SelectSessCode;\n    CREATE OR REPLACE FUNCTION SelectSessCode(\n        c_sess_code VARCHAR(250)\n    )\n    RETURNS table(\n        id BIGINT, \n        uid BIGINT, \n        expires TIMESTAMP, \n        created_at TIMESTAMP,\n        sess_code VARCHAR(250), \n        sess_data JSON\n    )\n    as $$\n        SELECT \n        sessions\n        FROM sessions \n        WHERE sess_code = c_sess_code\n    $$ LANGUAGE sql;\n\n    --------------------------------------------------------------------------------------------\u0424\u0443\u043D\u043A\u0446\u0438\u044F \u0434\u043E\u0431\u0430\u0432\u043B\u0435\u043D\u0438\u044F \u043E\u0440\u0433\u0430\u043D\u0438\u0437\u0430\u0446\u0438\u0438\n    DROP FUNCTION IF EXISTS AddOrgs;\n    CREATE OR REPLACE FUNCTION AddOrgs(\n    \tc_name VARCHAR(250),\n    \tc_full_name VARCHAR(400),\n    \tc_inn VARCHAR(50),\n    \tc_address VARCHAR(400),\n    \tc_latitude VARCHAR(60),\n    \tc_longitude VARCHAR(60),\n    \tc_created_at TIMESTAMP,\n    \tc_info TEXT)\n    RETURNS BIGINT\n    AS $$\n    \tINSERT INTO orgs (name, full_name, inn, address, latitude, longitude, created_at, info)\n    \tVALUES (c_name, c_full_name, c_inn, c_address, c_latitude, c_longitude, c_created_at, c_info)\n    \tRETURNING id\n    $$\n    LANGUAGE SQL;\n\n\n    --------------------------------------------------------------------------------------------\u0424\u0443\u043D\u043A\u0446\u0438\u044F \u043F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u044F \u0432\u0441\u0435\u0445 \u043E\u0440\u0433\u0430\u043D\u0438\u0437\u0430\u0446\u0438\u0439\n    DROP FUNCTION IF EXISTS SelectOrgs;\n    CREATE OR REPLACE FUNCTION SelectOrgs()\n    RETURNS TABLE (\n    \tid BIGINT, \n    \tname VARCHAR(250),\n    \tfull_name VARCHAR(400),\n    \tinn VARCHAR(50),\n    \taddress VARCHAR(400),\n\t    latitude VARCHAR(60),\n\t    longitude VARCHAR(60),\n\t    created_at TIMESTAMP,\n\t    info TEXT\n    )\n    AS $$\n    SELECT * FROM orgs\n    $$\n    LANGUAGE SQL;\n\n    --------------------------------------------------------------------------------------------\u0424\u0443\u043D\u043A\u0446\u0438\u044F \u043E\u0431\u043D\u043E\u0432\u043B\u0435\u043D\u0438\u044F \u043E\u0440\u0433\u0430\u043D\u0438\u0437\u0430\u0446\u0438\u0438\n    DROP FUNCTION IF EXISTS UpdateOrgs;\n    CREATE OR REPLACE FUNCTION UpdateOrgs(\n    \tc_id BIGINT,\n    \tc_name VARCHAR(250),\n    \tc_full_name VARCHAR(400),\n    \tc_inn VARCHAR(50),\n    \tc_address VARCHAR(400),\n    \tc_latitude VARCHAR(60),\n    \tc_longitude VARCHAR(60),\n    \tc_info TEXT\n    )\n    RETURNS VOID \n    AS $$\n    \tUPDATE orgs SET\n    \tid = c_id, \n    \tname = c_name,\n    \tfull_name = c_full_name,\n    \tinn = c_inn,\n    \taddress = c_address,\n    \tlatitude = c_latitude,\n    \tlongitude = c_longitude,\n    \tinfo = c_info\n    \tWHERE id = c_id\n    $$\n    LANGUAGE SQL; \n\n    --------------------------------------------------------------------------------------------\u0424\u0443\u043D\u043A\u0446\u0438\u044F \u043F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u044F \u0434\u043E\u043B\u0436\u043D\u043E\u0441\u0442\u0435\u0439 \u043E\u0440\u0433\u0430\u043D\u0438\u0437\u0430\u0446\u0438\u0438\n    DROP FUNCTION IF EXISTS SelectJobs_titles;\n    CREATE OR REPLACE FUNCTION SelectJobs_titles(\n    \tc_org_id BIGINT\n    )\n    RETURNS table (\n    \tid BIGINT,\n    \torg_id BIGINT,\n    \tname VARCHAR(250),\n    \tcreated_at TIMESTAMP,\n    \tinfo TEXT\n    )AS $$\n    \tSELECT * FROM jobs_titles WHERE org_id = c_org_id\n    $$ \n    LANGUAGE SQL;\n\n    --------------------------------------------------------------------------------------------\u0424\u0443\u043D\u043A\u0446\u0438\u044F \u0434\u043E\u0431\u0430\u0432\u043B\u0435\u043D\u0438\u044F \u0434\u043E\u043B\u0436\u043D\u043E\u0441\u0442\u0438\n    DROP FUNCTION IF EXISTS addJobs_titles;\n    CREATE OR REPLACE FUNCTION addJobs_titles(\n    \tc_org_id BIGINT,\n    \tc_name VARCHAR(250),\n    \tc_created_at TIMESTAMP,\n    \tc_info TEXT\n    )\n    RETURNS BIGINT\n    AS $$\n    \tINSERT INTO jobs_titles (org_id, name, created_at, info)\n    \tVALUES (c_org_id, c_name, c_created_at, c_info)\n    \tRETURNING id\n    $$ \n    LANGUAGE SQL;\n\n    --------------------------------------------------------------------------------------------\u0424\u0443\u043D\u043A\u0446\u0438\u044F \u043E\u0431\u043D\u043E\u0432\u043B\u0435\u043D\u0438\u044F \u0434\u043E\u043B\u0436\u043D\u043E\u0441\u0442\u0438\n    DROP FUNCTION IF EXISTS UpdateJobs_titles;\n    CREATE OR REPLACE FUNCTION UpdateJobs_titles(\n    \tc_id BIGINT,\n    \tc_org_id BIGINT,\n    \tc_name VARCHAR(250),\n    \tc_info TEXT\n    )\n    RETURNS VOID \n    AS $$\n    \tUPDATE jobs_titles SET\n    \tid = c_id, \n    \torg_id = c_org_id,\n    \tname = c_name,\n    \tinfo = c_info\n    \tWHERE id = c_id\n    $$\n    LANGUAGE SQL; \n\n\n    --------------------------------------------------------------------------------------------\u0424\u0443\u043D\u043A\u0446\u0438\u044F \u0434\u043E\u0431\u0430\u0432\u043B\u043D\u0438\u044F \u0441\u0445\u0435\u043C \u043F\u0440\u043E\u043A\u0442\u043E\u0432\n    DROP FUNCTION IF EXISTS AddScheme_Svg;\n    CREATE OR REPLACE FUNCTION AddScheme_Svg(\n    \tc_id_devs_groups BIGINT,\n    \tc_svg TEXT,\n    \tc_created_at TIMESTAMP\n    ) RETURNS BIGINT\n    AS $$\n    \tINSERT INTO scheme_svg(id_devs_groups, svg, created_at)\n    \tVALUES(c_id_devs_groups, c_svg, c_created_at)\n    \tRETURNING id\n    $$\n    LANGUAGE SQL;\n\n\n\n\n    --------------------------------------------------------------------------------------------\u0424\u0443\u043D\u043A\u0446\u0438\u044F \u043E\u0431\u043D\u043E\u0432\u043B\u0435\u043D\u0438\u044F \u0441\u0445\u0435\u043C \u043F\u0440\u043E\u043A\u0442\u043E\u0432\n    DROP FUNCTION IF EXISTS UpdateScheme_Svg;\n    CREATE OR REPLACE FUNCTION UpdateScheme_Svg(\n    \tc_id_devs_groups BIGINT,\n    \tc_svg TEXT,\n    \tc_created_at TIMESTAMP\n    ) RETURNS VOID\n    AS $$\n    UPDATE Scheme_Svg\n    SET\n    svg = c_svg, \n    created_at = c_created_at\n    WHERE id_devs_groups = c_id_devs_groups\n    $$\n    LANGUAGE SQL;\n\n    ",
    args: new Array()
};
//# sourceMappingURL=function.js.map